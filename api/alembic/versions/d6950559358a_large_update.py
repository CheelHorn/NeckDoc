"""large update

Revision ID: d6950559358a
Revises: 1fa4db46f653
Create Date: 2023-02-09 09:05:36.694491

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd6950559358a'
down_revision = '1fa4db46f653'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_id'), 'exercise', ['id'], unique=False)
    op.create_table('exercise_duration',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('number_of_sets', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('number_of_repetitions', sa.Integer(), nullable=True),
    sa.Column('time_in_seconds', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_duration_id'), 'exercise_duration', ['id'], unique=False)
    op.create_table('exercise_interval',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('time_in_days', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_interval_id'), 'exercise_interval', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('firstname', sa.String(length=256), nullable=True),
    sa.Column('lastname', sa.String(length=256), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('exercise_image',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('position', sa.SmallInteger(), nullable=False),
    sa.Column('exercise_id', sa.UUID(), nullable=True),
    sa.Column('image_url', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_image_id'), 'exercise_image', ['id'], unique=False)
    op.create_table('patient',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('social_security_number', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapist',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('clinic', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapy',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=True),
    sa.Column('therapist_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_therapy_id'), 'therapy', ['id'], unique=False)
    op.create_table('training_plan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('therapy_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['therapy_id'], ['therapy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_plan_id'), 'training_plan', ['id'], unique=False)
    op.create_table('training_plan_exercise',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('training_plan_id', sa.UUID(), nullable=True),
    sa.Column('exercise_id', sa.UUID(), nullable=True),
    sa.Column('interval_id', sa.UUID(), nullable=True),
    sa.Column('exercise_duration_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_duration_id'], ['exercise_duration.id'], ),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['interval_id'], ['exercise_interval.id'], ),
    sa.ForeignKeyConstraint(['training_plan_id'], ['training_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_plan_exercise_id'), 'training_plan_exercise', ['id'], unique=False)
    op.create_table('exercise_execution',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('training_plan_exercise_id', sa.UUID(), nullable=True),
    sa.Column('start_timestamp', sa.DateTime(), nullable=False),
    sa.Column('end_timestamp', sa.DateTime(), nullable=True),
    sa.Column('video_url', sa.String(length=256), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['training_plan_exercise_id'], ['training_plan_exercise.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_execution_id'), 'exercise_execution', ['id'], unique=False)
    op.create_table('exercise_execution_feedback',
    sa.Column('exercise_execution_id', sa.UUID(), nullable=False),
    sa.Column('feedback', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_execution_id'], ['exercise_execution.id'], ),
    sa.PrimaryKeyConstraint('exercise_execution_id')
    )
    op.create_table('exercise_execution_result',
    sa.Column('exercise_execution_id', sa.UUID(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_execution_id'], ['exercise_execution.id'], ),
    sa.PrimaryKeyConstraint('exercise_execution_id')
    )
    op.drop_index('ix_trainings_id', table_name='trainings')
    op.drop_table('trainings')
    op.drop_index('ix_therapies_id', table_name='therapies')
    op.drop_table('therapies')
    op.drop_table('patients')
    op.drop_index('ix_exercises_id', table_name='exercises')
    op.drop_table('exercises')
    op.drop_table('therapists')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('firstname', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('lastname', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('therapists',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('clinic', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], name='therapists_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='therapists_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exercises',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_path', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='exercises_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_exercises_id', 'exercises', ['id'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('social_security_number', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], name='patients_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='patients_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('therapies',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('patient_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('therapist_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='therapies_patient_id_fkey'),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapists.id'], name='therapies_therapist_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='therapies_pkey')
    )
    op.create_index('ix_therapies_id', 'therapies', ['id'], unique=False)
    op.create_table('trainings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('patient_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('exercise_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('video_path', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('results', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_successful', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name='trainings_exercise_id_fkey'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='trainings_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='trainings_pkey')
    )
    op.create_index('ix_trainings_id', 'trainings', ['id'], unique=False)
    op.drop_table('exercise_execution_result')
    op.drop_table('exercise_execution_feedback')
    op.drop_index(op.f('ix_exercise_execution_id'), table_name='exercise_execution')
    op.drop_table('exercise_execution')
    op.drop_index(op.f('ix_training_plan_exercise_id'), table_name='training_plan_exercise')
    op.drop_table('training_plan_exercise')
    op.drop_index(op.f('ix_training_plan_id'), table_name='training_plan')
    op.drop_table('training_plan')
    op.drop_index(op.f('ix_therapy_id'), table_name='therapy')
    op.drop_table('therapy')
    op.drop_table('therapist')
    op.drop_table('patient')
    op.drop_index(op.f('ix_exercise_image_id'), table_name='exercise_image')
    op.drop_table('exercise_image')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_exercise_interval_id'), table_name='exercise_interval')
    op.drop_table('exercise_interval')
    op.drop_index(op.f('ix_exercise_duration_id'), table_name='exercise_duration')
    op.drop_table('exercise_duration')
    op.drop_index(op.f('ix_exercise_id'), table_name='exercise')
    op.drop_table('exercise')
    # ### end Alembic commands ###
